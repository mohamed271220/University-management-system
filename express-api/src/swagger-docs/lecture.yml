openapi: 3.0.0
info:
  title: University Management API
  description: API for managing university lectures, including CRUD operations and attendance management.
  version: 1.0.0

paths:
  /api/v1/lectures:
    post:
      summary: Create a new lecture
      description: Create a new lecture. Accessible by professors, admins, and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                professorId:
                  type: string
                hallId:
                  type: string
                courseId:
                  type: string
                dayOfWeek:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                recurrencePattern:
                  type: string
                recurrenceEndDate:
                  type: string
                  format: date-time
      responses:
        '201':
          description: Lecture created successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      x-roles:
        - professor
        - admin
        - staff

  /api/v1/lectures/allLectures:
    get:
      summary: Retrieve a list of all lectures
      description: Retrieve a list of all lectures with optional search and pagination. Accessible by professors, admins, and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: query
          name: search
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: List of lectures retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      x-roles:
        - professor
        - admin
        - staff

  /api/v1/lectures/{lectureId}:
    get:
      summary: Retrieve a lecture by ID
      description: Retrieve details of a specific lecture by its ID. Accessible by professors, admins, and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: Lecture retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - professor
        - admin
        - staff

    put:
      summary: Update a lecture by ID
      description: Update details of a specific lecture by its ID. Accessible by admins and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                professorId:
                  type: string
                hallId:
                  type: string
                courseId:
                  type: string
                dayOfWeek:
                  type: string
                startTime:
                  type: string
                  format: date-time
                endTime:
                  type: string
                  format: date-time
                recurrencePattern:
                  type: string
                recurrenceEndDate:
                  type: string
                  format: date-time
      responses:
        '200':
          description: Lecture updated successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - admin
        - staff

    delete:
      summary: Delete a lecture by ID
      description: Delete a specific lecture by its ID. Accessible by admins and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: Lecture deleted successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - admin
        - staff

  /api/v1/lectures/{lectureId}/attendance:
    get:
      summary: Retrieve attendance records for a lecture
      description: Retrieve attendance records for a specific lecture. Accessible by professors, admins, and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: offset
          schema:
            type: integer
            default: 0
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: Attendance records retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - professor
        - admin
        - staff

  /api/v1/lectures/{lectureId}/archive:
    put:
      summary: Archive a lecture by ID
      description: Archive a specific lecture by its ID. Accessible by admins and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: Lecture archived successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - admin
        - staff

  /api/v1/lectures/{lectureId}/archive/history:
    get:
      summary: Retrieve historical records for a lecture
      description: Retrieve historical records of a specific lecture by its ID. Accessible by professors, admins, and staff.
      security:
        - bearerAuth: []
      tags:
        - Lectures
      parameters:
        - in: path
          name: lectureId
          required: true
          schema:
            type: string
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer <token>"
      responses:
        '200':
          description: Lecture history retrieved successfully
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Lecture not found
        '500':
          description: Internal Server Error
      x-roles:
        - professor
        - admin
        - staff

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
